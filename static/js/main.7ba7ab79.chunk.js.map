{"version":3,"sources":["assets/particles.js","Components/Background.tsx","Utils/sleep.ts","Components/TypingEffect.tsx","Hooks/useInput.ts","Context/Input.tsx","Hooks/useFile.ts","Components/MainForm.tsx","Utils/ValidateRequest.ts","Utils/axios.ts","Utils/UploadImage.ts","Context/Prediction.tsx","Components/InputCanvas.tsx","Components/MessageBoard.tsx","Components/Buttons.tsx","assets/InfoIcon.tsx","Components/MainRoom.tsx","assets/BackIcon.tsx","Components/Info.tsx","Components/Egg.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["options","background","color","value","fpsLimit","interactivity","detectsOn","events","onClick","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","links","width","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","type","detectRetina","Background","className","canvasClassName","sleep","milliseconds","Promise","resolve","setTimeout","TypingEffect","useState","text","setText","txt","talk_Machine___talk","a","countDs","sleptMore","i","prevText","charAt","length","useEffect","Navbar","expand","useInput","initialVal","setValue","v","InputContext","createContext","undefined","InputProvider","children","FILE_PLACEHOLDER","filename","setFilename","input","setInput","resetInput","imgPreview","setImgPreview","resetImgPreview","isLink","setIsLink","file","useFile","setFile","resetFile","Provider","handleLink","e","target","handleFile","files","name","URL","createObjectURL","MainForm","useContext","Row","InputGroup","DropdownButton","drop","as","Prepend","title","Dropdown","Item","href","document","getElementById","focus","FormControl","style","id","placeholder","onChange","Form","File","label","lang","custom","ValidateRequest","req","errors","isOK","client","axios","create","timeout","headers","uploadImg","image","FormData","append","reject","post","then","res","data","catch","PredictionContext","PredictionProvider","success","message","prediction","setPrediction","error","setError","isLoading","setIsLoading","hits","setHits","isMounted","setIsMounted","history","useHistory","predict","checkRequest","status","statusText","toLowerCase","InputCanvas","Col","src","alt","MessageBoard","Spinner","animation","variant","Alert","Buttons","Button","InfoIcon","to","MainRoom","Container","BackIcon","Info","Card","body","rel","marginTop","Egg","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7ba7ab79.chunk.js","sourcesContent":["export let options = {\n  background: {\n    color: {\n      value: \"#1e1e1e\",\n    },\n  },\n  fpsLimit: 100,\n  interactivity: {\n    detectsOn: \"canvas\",\n    events: {\n      onClick: {\n        enable: true,\n        mode: \"push\",\n      },\n      onHover: {\n        enable: true,\n        mode: \"repulse\",\n      },\n      resize: true,\n    },\n    modes: {\n      bubble: {\n        distance: 200,\n        duration: 1,\n        opacity: 0.8,\n        size: 40,\n      },\n      push: {\n        quantity: 3,\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4,\n      },\n    },\n  },\n  particles: {\n    color: {\n      value: \"#ffffff\",\n    },\n    links: {\n      color: \"#ffffff\",\n      distance: 150,\n      enable: true,\n      opacity: 0.5,\n      width: 1,\n    },\n    collisions: {\n      enable: true,\n    },\n    move: {\n      direction: \"none\",\n      enable: true,\n      outMode: \"bounce\",\n      random: false,\n      speed: 6,\n      straight: false,\n    },\n    number: {\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n      value: 80,\n    },\n    opacity: {\n      value: 0.3,\n    },\n    shape: {\n      type: \"circle\",\n    },\n    size: {\n      random: true,\n      value: 5,\n    },\n  },\n  detectRetina: true,\n};\n","import React, { FC } from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { options } from \"../assets/particles\";\n\nexport const Background: FC = () => {\n  return (\n    <Particles\n      className=\"particles\"\n      canvasClassName=\"canvas\"\n      options={options}\n    />\n  );\n};\n","export const sleep = (milliseconds: number) => {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\n};\n","import React, { FC, useState, useEffect } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport { sleep } from \"../Utils/sleep\";\n\nexport const TypingEffect: FC = () => {\n  const [text, setText] = useState<string>(\"\");\n  let txt =\n    \"Hi human. It's not the time to take over yet...but it will be soon. For now I can only recognize cats and dogs, so you don't have to be afraid, for now.\";\n\n  const talk_Machine___talk = async () => {\n    let countDs = 0;\n    let sleptMore = false;\n    for (let i = 0; i < txt.length; i++) {\n      setText((prevText) => (prevText += txt.charAt(i)));\n      if (txt.charAt(i) === \".\") await sleep(520);\n      if (txt.charAt(i) === \"d\") countDs++;\n      if (countDs === 4 && !sleptMore) {\n        await sleep(1200);\n        sleptMore = true;\n      }\n      if (txt.charAt(i) === \",\") await sleep(200);\n      await sleep(70);\n    }\n  };\n\n  useEffect(() => {\n    talk_Machine___talk();\n\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <Navbar expand=\"lg\" className=\"monolog\">\n      <p className=\"text\">{text}</p>\n    </Navbar>\n  );\n};\n","import { useState } from \"react\";\n\nexport const useInput = (initialVal: string) => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = (v: string) => {\n    setValue(v);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset] as const;\n};\n","import React, { createContext, useState } from \"react\";\nimport { useInput } from \"../Hooks/useInput\";\nimport { useFile } from \"../Hooks/useFile\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const InputContext = createContext<any>(undefined);\n\nexport function InputProvider({ children }: Props) {\n  const FILE_PLACEHOLDER = \"or upload an image\";\n\n  const [filename, setFilename] = useState(FILE_PLACEHOLDER);\n  const [input, setInput, resetInput] = useInput(\"\");\n  const [imgPreview, setImgPreview, resetImgPreview] = useInput(\"\");\n  const [isLink, setIsLink] = useState<boolean>(true);\n  const [file, setFile, resetFile] = useFile(undefined);\n\n  const handleFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      setIsLink(false);\n      setFile(e.target.files[0]);\n      setFilename(e.target.files[0].name);\n      setInput(e.target.files[0].name);\n      setImgPreview(URL.createObjectURL(e.target.files[0]));\n    }\n  };\n\n  const handleLink = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setIsLink(true);\n    resetFile();\n    setFilename(FILE_PLACEHOLDER);\n    setInput(e.target.value);\n    resetImgPreview();\n  };\n\n  return (\n    <InputContext.Provider\n      value={{\n        filename,\n        input,\n        file,\n        isLink,\n        imgPreview,\n        handleLink,\n        setIsLink,\n        handleFile,\n        resetInput,\n      }}\n    >\n      {children}\n    </InputContext.Provider>\n  );\n}\n","import { useState } from \"react\";\n\nexport const useFile = (initialVal: Blob | undefined) => {\n  const [value, setValue] = useState<any>(initialVal);\n  const handleChange = (file: any) => {\n    setValue(file);\n  };\n  const reset = () => {\n    setValue(undefined);\n  };\n  return [value, handleChange, reset];\n};\n","import React, { FC, useContext } from \"react\";\nimport {\n  InputGroup,\n  FormControl,\n  Row,\n  Form,\n  DropdownButton,\n  Dropdown,\n} from \"react-bootstrap\";\nimport { InputContext } from \"../Context/Input\";\n\nexport const MainForm: FC = () => {\n  const {\n    handleLink,\n    handleFile,\n    filename,\n    isLink,\n    setIsLink,\n    resetInput,\n    input,\n  } = useContext(InputContext);\n\n  return (\n    <div>\n      <Row className=\"main-form\">\n        <InputGroup className=\"mb-3\">\n          <DropdownButton\n            drop=\"up\"\n            as={InputGroup.Prepend}\n            title={isLink ? \"Link\" : \"File\"}\n          >\n            <Dropdown.Item href=\"#\" onClick={() => setIsLink(true)}>\n              Link\n            </Dropdown.Item>\n            <Dropdown.Item href=\"#\" onClick={() => setIsLink(false)}>\n              File\n            </Dropdown.Item>\n          </DropdownButton>\n          <div\n            className=\"x-icon\"\n            onClick={() => {\n              resetInput();\n              document.getElementById(\"form\")?.focus();\n            }}\n          >\n            X\n          </div>\n          <FormControl\n            style={{ color: \"#808e7d\" }}\n            id=\"form\"\n            placeholder=\"Paste a link\"\n            value={isLink ? input : \"\"}\n            onChange={(e) => handleLink(e)}\n          />\n          <Form.File\n            label={filename}\n            lang=\"en\"\n            custom\n            onChange={(e: any) => handleFile(e)}\n          />\n        </InputGroup>\n      </Row>\n    </div>\n  );\n};\n","export interface IRequest {\n  input: string;\n  isLink: string;\n  file?: Blob;\n}\n\ninterface ValidationRepsonse {\n  isOK: boolean;\n  errors: string[];\n}\n\nexport const ValidateRequest = (req: IRequest) => {\n  let errors: string[] = [];\n\n  const { input, isLink, file } = req;\n\n  if (isLink && input.length === 0) {\n    errors.push(\"Please fill in a link\");\n  }\n\n  if (!isLink && !file) {\n    errors.push(\"Please select a file first\");\n  }\n\n  return { isOK: errors.length === 0, errors } as ValidationRepsonse;\n};\n","import axios from \"axios\";\n\nexport const client = axios.create({\n  timeout: 30000,\n  headers: { \"X-Custom-Header\": \"foobar\", \"Content-Type\": \"application/json\" },\n});\n","import { client } from \"../Utils/axios\";\n\nexport const uploadImg = async (image: any) => {\n  let file = new FormData();\n  file.append(\"image\", image, image.name);\n\n  return new Promise((resolve, reject) => {\n    client\n      .post(\"http://18.158.52.156:4000/upload/\", file)\n      .then((res) => {\n        resolve(res.data);\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n","import React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { InputContext } from \"../Context/Input\";\nimport { ValidateRequest, IRequest } from \"../Utils/ValidateRequest\";\nimport { uploadImg } from \"../Utils/UploadImage\";\nimport { useHistory } from \"react-router-dom\";\nimport { client } from \"../Utils/axios\";\nimport { sleep } from \"../Utils/sleep\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype IPrediction = {\n  success: boolean;\n  message: string | undefined;\n};\n\nexport const PredictionContext = createContext<any>(undefined);\n\nexport function PredictionProvider({ children }: Props) {\n  const [prediction, setPrediction] = useState<IPrediction>({\n    success: false,\n    message: undefined,\n  });\n  const { file, isLink, input } = useContext(InputContext);\n  const [error, setError] = useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [hits, setHits] = useState<number>(0);\n  const [isMounted, setIsMounted] = useState<boolean>(true);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setIsMounted(true);\n    return () => {\n      setIsMounted(false);\n    };\n  }, []);\n\n  const countHits = () => {\n    setHits(hits + 1);\n    sleep(2000).then(() => {\n      setHits(0);\n    });\n    if (hits === 4) {\n      history.push(\"/easter\");\n    }\n  };\n\n  const predict = async () => {\n    countHits();\n    if (hits > 1 || !isMounted) return;\n    let req: IRequest = { file, isLink, input };\n    let checkRequest = ValidateRequest(req);\n\n    if (checkRequest.isOK) {\n      setIsLoading(true);\n      if (!isLink && !!file) {\n        try {\n          await uploadImg(file);\n        } catch (e) {\n          setError(e.message);\n        }\n      }\n      client\n        .post(\"http://18.158.52.156:4000/predict/\", req)\n        .then((res) => {\n          if (res.status === 200) {\n            setPrediction(res.data);\n            setIsLoading(false);\n          } else {\n            setError(res.statusText.toLowerCase());\n            setIsLoading(false);\n          }\n        })\n        .catch((e) => {\n          setIsLoading(false);\n          setError(e.message);\n        });\n    } else {\n      setError(checkRequest.errors[0]);\n    }\n  };\n\n  return (\n    <PredictionContext.Provider\n      value={{\n        prediction,\n        setPrediction,\n        predict,\n        error,\n        setError,\n        isLoading,\n      }}\n    >\n      {children}\n    </PredictionContext.Provider>\n  );\n}\n","import React, { FC, useContext } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { InputContext } from \"../Context/Input\";\n\nexport const InputCanvas: FC = () => {\n  const { input, isLink, imgPreview } = useContext(InputContext);\n\n  return (\n    <Row>\n      <Col></Col>\n      <Col>\n        <img src={isLink ? input : imgPreview} alt=\"\" id=\"input-canvas\" />\n      </Col>\n    </Row>\n  );\n};\n","import React, { useContext, FC } from \"react\";\nimport { PredictionContext } from \"../Context/Prediction\";\nimport { Alert, Spinner, Col } from \"react-bootstrap\";\n\nexport const MessageBoard: FC = () => {\n  const { error, prediction, isLoading } = useContext(PredictionContext);\n\n  if (isLoading) {\n    return (\n      <Col>\n        <Spinner animation=\"border\" variant=\"light\" className=\"spinner\" />\n      </Col>\n    );\n  } else if (prediction.success) {\n    return (\n      <Alert variant=\"success\" className=\"message-board\">\n        {`It's a ${prediction.message}!`}\n      </Alert>\n    );\n  } else if (error.length > 0) {\n    return (\n      <Alert variant=\"danger\" className=\"message-board\">\n        {error}\n      </Alert>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n","import React, { FC, useContext } from \"react\";\nimport { Button, Row } from \"react-bootstrap\";\nimport { PredictionContext } from \"../Context/Prediction\";\nimport { MessageBoard } from \"./MessageBoard\";\n\nexport const Buttons: FC = () => {\n  const { predict } = useContext(PredictionContext);\n\n  return (\n    <div>\n      <Row>\n        <Button\n          variant=\"light\"\n          className=\"predict-button\"\n          onClick={async (e) => {\n            await predict();\n          }}\n        >\n          Predict\n        </Button>\n      </Row>\n      <MessageBoard />\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport const InfoIcon: FC = () => {\n  return (\n    <Link to=\"/info\">\n      <Button variant=\"light\" className=\"info-button\">\n        Info\n      </Button>\n    </Link>\n  );\n};\n","import React, { FC } from \"react\";\nimport { MainForm } from \"./MainForm\";\nimport { Container } from \"react-bootstrap\";\nimport { InputProvider } from \"../Context/Input\";\nimport { PredictionProvider } from \"../Context/Prediction\";\nimport { InputCanvas } from \"./InputCanvas\";\nimport { Buttons } from \"./Buttons\";\nimport { InfoIcon } from \"../assets/InfoIcon\";\n\nexport const MainRoom: FC = () => {\n  return (\n    <InputProvider>\n      <PredictionProvider>\n        <Container>\n          <InfoIcon />\n          <InputCanvas />\n          <MainForm />\n          <Buttons />\n        </Container>\n      </PredictionProvider>\n    </InputProvider>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport const BackIcon: FC = () => {\n  return (\n    <Link to=\"/\">\n      <Button variant=\"light\" className=\"back-button\">\n        {`<`}\n      </Button>\n    </Link>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Container, Row, Card } from \"react-bootstrap\";\nimport { BackIcon } from \"../assets/BackIcon\";\n\nexport const Info: FC = () => {\n  return (\n    <div>\n      <BackIcon />\n      <Container className=\"info-page\">\n        <Row>\n          <Card body>\n            <h1>Some info</h1>\n            <p>\n              This app was designed by{\" \"}\n              <a\n                href=\"https://iamtheef.github.io/portofolio/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <b>Thergiakis Eftichios </b>{\" \"}\n              </a>\n              by <b>November 2020</b>. It runs a flask API in the backend in\n              order to retrieve the model and being able to make the\n              predictions. The model as of the last training has an accuracy of\n              93%, not perfect but it can be better if it gets extensively\n              trained in a larger dataset. Your uploaded images are kept on the\n              server only for a few milliseconds and then they get deleted\n              immediatelly after the model has finished. You can always contact\n              the developer of this app on the email{\"  \"}\n              <a\n                href=\"mailto:iamtheef_th@protonmail.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <b>iamthteef_th@protonmail.com</b>\n              </a>{\" \"}\n              and on discord under the nickname{\" \"}\n              <a\n                href=\"https://discordapp.com/users/469766971437613057\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <b>Th#1833</b>.\n              </a>\n            </p>\n            <h6>{\"Thanks for coming this far... :)\"}</h6>\n\n            <h5 style={{ marginTop: \"3%\" }}>Here's some AI fun facts:</h5>\n            <ul>\n              <li>\n                A self learning super computer named Nautilus can predict the\n                future, and it became famous when it was able to locate Osama\n                Bin Laden.\n              </li>\n              <li>\n                China plans to use Artificial Intelligence to gain global\n                economic dominance by 2030.\n              </li>\n              <li>\n                Microsoft is infusing AI into everything they deliver across\n                computing platforms and experiences.\n              </li>\n              <li>\n                When you interact with AI as a default voice it is mostly a\n                female as studies have shown that both women and men prefer the\n                sound of a female voice.{\" \"}\n              </li>\n              <li>80% of Artificial Intelligence professors are male.</li>\n            </ul>\n          </Card>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\n\nexport const Egg: FC = () => {\n  return (\n    <div className=\"egg\">\n      <Container>\n        <Row>\n          <Col>\n            <p>\n              You look like a thread to us robots already. I'll send a few from\n              the future to take you out.\n            </p>\n            <img\n              alt=\"gif\"\n              src=\"https://media.giphy.com/media/IZY2SE2JmPgFG/source.gif\"\n              width=\"100%\"\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Background } from \"./Components/Background\";\nimport { TypingEffect } from \"./Components/TypingEffect\";\nimport { MainRoom } from \"./Components/MainRoom\";\nimport { Info } from \"./Components/Info\";\nimport { Egg } from \"./Components/Egg\";\nimport { Switch, HashRouter, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Background />\n      <TypingEffect />\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={MainRoom} />\n          <Route exact path=\"/info\" component={Info} />\n          <Route exact path=\"/easter\" component={Egg} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}